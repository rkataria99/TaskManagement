{"ast":null,"code":"import React,{useState,useEffect}from'react';import TaskForm from'./components/TaskForm';import TaskList from'./components/TaskList';import api from'./api';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[tasks,setTasks]=useState([]);const fetchTasks=async()=>{try{const response=await api.get('/tasks');setTasks(response.data);}catch(error){console.error('Error fetching tasks:',error);}};useEffect(()=>{fetchTasks();},[]);const handleTaskCreated=()=>{fetchTasks();// Re-fetch all tasks after a new task is added\n};const handleTaskDeleted=deletedTaskId=>{setTasks(prevTasks=>prevTasks.filter(task=>task._id!==deletedTaskId));};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Task Management\"}),/*#__PURE__*/_jsx(TaskForm,{onTaskCreated:handleTaskCreated}),/*#__PURE__*/_jsx(TaskList,{tasks:tasks,onTaskDeleted:handleTaskDeleted})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","TaskForm","TaskList","api","jsx","_jsx","jsxs","_jsxs","App","tasks","setTasks","fetchTasks","response","get","data","error","console","handleTaskCreated","handleTaskDeleted","deletedTaskId","prevTasks","filter","task","_id","children","onTaskCreated","onTaskDeleted"],"sources":["D:/TaskManagementSystem/TaskManagementSystem/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport TaskForm from './components/TaskForm';\nimport TaskList from './components/TaskList';\nimport api from './api';\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n\n  const fetchTasks = async () => {\n    try {\n      const response = await api.get('/tasks');\n      setTasks(response.data);\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  const handleTaskCreated = () => {\n    fetchTasks(); // Re-fetch all tasks after a new task is added\n  };\n\n  const handleTaskDeleted = (deletedTaskId) => {\n    setTasks((prevTasks) => prevTasks.filter((task) => task._id !== deletedTaskId));\n  };\n\n  return (\n    <div>\n      <h1>Task Management</h1>\n      <TaskForm onTaskCreated={handleTaskCreated} />\n      <TaskList tasks={tasks} onTaskDeleted={handleTaskDeleted} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,QAAQ,KAAM,uBAAuB,CAC5C,MAAO,CAAAC,QAAQ,KAAM,uBAAuB,CAC5C,MAAO,CAAAC,GAAG,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAExB,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CAEtC,KAAM,CAAAY,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC7B,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAT,GAAG,CAACU,GAAG,CAAC,QAAQ,CAAC,CACxCH,QAAQ,CAACE,QAAQ,CAACE,IAAI,CAAC,CACzB,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,CAAEA,KAAK,CAAC,CAC/C,CACF,CAAC,CAEDf,SAAS,CAAC,IAAM,CACdW,UAAU,CAAC,CAAC,CACd,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAM,iBAAiB,CAAGA,CAAA,GAAM,CAC9BN,UAAU,CAAC,CAAC,CAAE;AAChB,CAAC,CAED,KAAM,CAAAO,iBAAiB,CAAIC,aAAa,EAAK,CAC3CT,QAAQ,CAAEU,SAAS,EAAKA,SAAS,CAACC,MAAM,CAAEC,IAAI,EAAKA,IAAI,CAACC,GAAG,GAAKJ,aAAa,CAAC,CAAC,CACjF,CAAC,CAED,mBACEZ,KAAA,QAAAiB,QAAA,eACEnB,IAAA,OAAAmB,QAAA,CAAI,iBAAe,CAAI,CAAC,cACxBnB,IAAA,CAACJ,QAAQ,EAACwB,aAAa,CAAER,iBAAkB,CAAE,CAAC,cAC9CZ,IAAA,CAACH,QAAQ,EAACO,KAAK,CAAEA,KAAM,CAACiB,aAAa,CAAER,iBAAkB,CAAE,CAAC,EACzD,CAAC,CAEV,CAEA,cAAe,CAAAV,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}